version: '3.5'
volumes:
  redpanda: null
services:
  crdb:
    image: cockroachdb/cockroach:v19.2.2
    ports:
      - "26257:26257"
      - "8080:8080"
    command: start-single-node --insecure
    volumes:
      - "${PWD}/cockroach-data/crdb:/cockroach/cockroach-data"
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.4
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
  message:
    build: 
      context: .
      dockerfile: ./services/message/dev.Dockerfile
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
        - action: rebuild
          path: ./services/message/config
        - action: rebuild
          path: ./services/message/dev.dockerfile
    ports:
      - 4000:4000 
    volumes:
      - ${PWD}/services/message/config:/app/services/message/config
  socket:
    build: 
      context: .
      dockerfile: ./services/socket/dev.Dockerfile
    develop:
      watch:
        - action: sync
          path: ./
          target: /app
        - action: rebuild
          path: ./services/socket/dev.dockerfile
    ports:
      - 3000:3000

