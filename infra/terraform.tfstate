{
  "version": 4,
  "terraform_version": "1.6.1",
  "serial": 689,
  "lineage": "85f950ff-e9fb-fd6b-6022-15ca4f5ad373",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "crdb_operator",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "./charts/cockroach-operator",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "crdb-operator",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.16.0",
                "chart": "cockroachdb-operator",
                "name": "crdb-operator",
                "namespace": "default",
                "revision": 1,
                "values": "{}",
                "version": "0.1.0"
              }
            ],
            "name": "crdb-operator",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "nginx_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "nginx-ingress-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "nginx-ingress-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.9.3",
                "chart": "nginx-ingress-controller",
                "name": "nginx-ingress-controller",
                "namespace": "default",
                "revision": 2,
                "values": "{\"namespaceOverride\":\"ingress-nginx\",\"service\":{\"ports\":{\"proxied-tcp-26256\":26257}},\"tcp\":{\"26257\":\"default/cockroachdb-public:26257\"}}",
                "version": "9.9.2"
              }
            ],
            "name": "nginx-ingress-controller",
            "namespace": "default",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "namespaceOverride",
                "type": "",
                "value": "ingress-nginx"
              },
              {
                "name": "service.ports.proxied-tcp-26256",
                "type": "",
                "value": "26257"
              },
              {
                "name": "tcp.26257",
                "type": "",
                "value": "default/cockroachdb-public:26257"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "9.9.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.ingress-nginx-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "message-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/message-service-deployment",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "message-service",
                  "group": "message-system"
                },
                "name": "message-service-deployment",
                "namespace": "default",
                "resource_version": "554",
                "uid": "8ddbe443-d594-428e-bf63-22352d308a24"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "message-service-pod"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "message-service-pod",
                          "group": "message-system"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "rafaeltab/message-service",
                            "image_pull_policy": "Never",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "message-service-container",
                            "port": [
                              {
                                "container_port": 4000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "websocket",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "socket-deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/socket-service-deployment",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "socket-service",
                  "group": "message-system"
                },
                "name": "socket-service-deployment",
                "namespace": "default",
                "resource_version": "559",
                "uid": "c79bbe5a-4611-4502-82ed-8238249d17cd"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "socket-service-pod"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "socket-service-pod",
                          "group": "message-system"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "rafaeltab/socket-service",
                            "image_pull_policy": "Never",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "socket-service-container",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "websocket",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {},
                                "requests": {}
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_ingress_v1",
      "name": "socket-ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "default/socket-service-ingress",
            "metadata": [
              {
                "annotations": {
                  "nginx.ingress.kubernetes.io/proxy-read-timeout": "3600",
                  "nginx.ingress.kubernetes.io/proxy-send-timeout": "3600"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "socket-service-ingress",
                "namespace": "default",
                "resource_version": "1476",
                "uid": "5aa08688-e6d1-4fe6-b133-d2a9878f0838"
              }
            ],
            "spec": [
              {
                "default_backend": [],
                "ingress_class_name": "nginx",
                "rule": [
                  {
                    "host": "localhost",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "resource": [],
                                "service": [
                                  {
                                    "name": "socket-service-service",
                                    "port": [
                                      {
                                        "name": "",
                                        "number": 3000
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "path": "/ws/",
                            "path_type": "Prefix"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": []
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "192.168.65.3"
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "crdbcluster_cockroachdb",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "crdb.cockroachlabs.com/v1alpha1",
                "kind": "CrdbCluster",
                "metadata": {
                  "name": "cockroachdb",
                  "namespace": "default"
                },
                "spec": {
                  "additionalLabels": {
                    "crdb": "is-cool"
                  },
                  "cockroachDBVersion": "v23.1.4",
                  "dataStore": {
                    "pvc": {
                      "spec": {
                        "accessModes": [
                          "ReadWriteOnce"
                        ],
                        "resources": {
                          "requests": {
                            "storage": "60Gi"
                          }
                        },
                        "volumeMode": "Filesystem"
                      }
                    }
                  },
                  "ingress": {
                    "ui": {
                      "host": "database.localhost",
                      "ingressClassName": "nginx"
                    }
                  },
                  "nodes": 10,
                  "resources": {
                    "limits": {
                      "cpu": 2,
                      "memory": "16Gi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "additionalLabels": [
                        "object",
                        {
                          "crdb": "string"
                        }
                      ],
                      "cockroachDBVersion": "string",
                      "dataStore": [
                        "object",
                        {
                          "pvc": [
                            "object",
                            {
                              "spec": [
                                "object",
                                {
                                  "accessModes": [
                                    "tuple",
                                    [
                                      "string"
                                    ]
                                  ],
                                  "resources": [
                                    "object",
                                    {
                                      "requests": [
                                        "object",
                                        {
                                          "storage": "string"
                                        }
                                      ]
                                    }
                                  ],
                                  "volumeMode": "string"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "ingress": [
                        "object",
                        {
                          "ui": [
                            "object",
                            {
                              "host": "string",
                              "ingressClassName": "string"
                            }
                          ]
                        }
                      ],
                      "nodes": "number",
                      "resources": [
                        "object",
                        {
                          "limits": [
                            "object",
                            {
                              "cpu": "number",
                              "memory": "string"
                            }
                          ],
                          "requests": [
                            "object",
                            {
                              "cpu": "string",
                              "memory": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "crdb.cockroachlabs.com/v1alpha1",
                "kind": "CrdbCluster",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "cockroachdb",
                  "namespace": "default",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "additionalAnnotations": null,
                  "additionalArgs": null,
                  "additionalLabels": {
                    "crdb": "is-cool"
                  },
                  "affinity": {
                    "nodeAffinity": {
                      "preferredDuringSchedulingIgnoredDuringExecution": null,
                      "requiredDuringSchedulingIgnoredDuringExecution": {
                        "nodeSelectorTerms": null
                      }
                    },
                    "podAffinity": {
                      "preferredDuringSchedulingIgnoredDuringExecution": null,
                      "requiredDuringSchedulingIgnoredDuringExecution": null
                    },
                    "podAntiAffinity": {
                      "preferredDuringSchedulingIgnoredDuringExecution": null,
                      "requiredDuringSchedulingIgnoredDuringExecution": null
                    }
                  },
                  "automountServiceAccountToken": null,
                  "cache": null,
                  "clientTLSSecret": null,
                  "cockroachDBVersion": "v23.1.4",
                  "dataStore": {
                    "hostPath": {
                      "path": null,
                      "type": null
                    },
                    "pvc": {
                      "source": {
                        "claimName": "",
                        "readOnly": null
                      },
                      "spec": {
                        "accessModes": [
                          "ReadWriteOnce"
                        ],
                        "dataSource": {
                          "apiGroup": null,
                          "kind": null,
                          "name": null
                        },
                        "resources": {
                          "limits": null,
                          "requests": {
                            "storage": "60Gi"
                          }
                        },
                        "selector": {
                          "matchExpressions": null,
                          "matchLabels": null
                        },
                        "storageClassName": null,
                        "volumeMode": "Filesystem",
                        "volumeName": null
                      }
                    },
                    "supportsAutoResize": false
                  },
                  "grpcPort": 26258,
                  "httpPort": 8080,
                  "image": {
                    "name": null,
                    "pullPolicy": null,
                    "pullSecret": null
                  },
                  "ingress": {
                    "sql": {
                      "annotations": null,
                      "host": null,
                      "ingressClassName": null,
                      "tls": null
                    },
                    "ui": {
                      "annotations": null,
                      "host": "database.localhost",
                      "ingressClassName": "nginx",
                      "tls": null
                    }
                  },
                  "logConfigMap": null,
                  "maxSQLMemory": null,
                  "maxUnavailable": 1,
                  "minAvailable": null,
                  "nodeSelector": null,
                  "nodeTLSSecret": null,
                  "nodes": 10,
                  "podEnvVariables": null,
                  "resources": {
                    "limits": {
                      "cpu": "2",
                      "memory": "16Gi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    }
                  },
                  "sqlPort": 26257,
                  "tlsEnabled": null,
                  "tolerations": null,
                  "topologySpreadConstraints": null
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "additionalAnnotations": [
                        "map",
                        "string"
                      ],
                      "additionalArgs": [
                        "list",
                        "string"
                      ],
                      "additionalLabels": [
                        "map",
                        "string"
                      ],
                      "affinity": [
                        "object",
                        {
                          "nodeAffinity": [
                            "object",
                            {
                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                "list",
                                [
                                  "object",
                                  {
                                    "preference": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchFields": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ],
                                    "weight": "number"
                                  }
                                ]
                              ],
                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                "object",
                                {
                                  "nodeSelectorTerms": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchFields": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "podAffinity": [
                            "object",
                            {
                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                "list",
                                [
                                  "object",
                                  {
                                    "podAffinityTerm": [
                                      "object",
                                      {
                                        "labelSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaceSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaces": [
                                          "list",
                                          "string"
                                        ],
                                        "topologyKey": "string"
                                      }
                                    ],
                                    "weight": "number"
                                  }
                                ]
                              ],
                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                "list",
                                [
                                  "object",
                                  {
                                    "labelSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "namespaceSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "namespaces": [
                                      "list",
                                      "string"
                                    ],
                                    "topologyKey": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "podAntiAffinity": [
                            "object",
                            {
                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                "list",
                                [
                                  "object",
                                  {
                                    "podAffinityTerm": [
                                      "object",
                                      {
                                        "labelSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaceSelector": [
                                          "object",
                                          {
                                            "matchExpressions": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "key": "string",
                                                  "operator": "string",
                                                  "values": [
                                                    "list",
                                                    "string"
                                                  ]
                                                }
                                              ]
                                            ],
                                            "matchLabels": [
                                              "map",
                                              "string"
                                            ]
                                          }
                                        ],
                                        "namespaces": [
                                          "list",
                                          "string"
                                        ],
                                        "topologyKey": "string"
                                      }
                                    ],
                                    "weight": "number"
                                  }
                                ]
                              ],
                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                "list",
                                [
                                  "object",
                                  {
                                    "labelSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "namespaceSelector": [
                                      "object",
                                      {
                                        "matchExpressions": [
                                          "list",
                                          [
                                            "object",
                                            {
                                              "key": "string",
                                              "operator": "string",
                                              "values": [
                                                "list",
                                                "string"
                                              ]
                                            }
                                          ]
                                        ],
                                        "matchLabels": [
                                          "map",
                                          "string"
                                        ]
                                      }
                                    ],
                                    "namespaces": [
                                      "list",
                                      "string"
                                    ],
                                    "topologyKey": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "automountServiceAccountToken": "bool",
                      "cache": "string",
                      "clientTLSSecret": "string",
                      "cockroachDBVersion": "string",
                      "dataStore": [
                        "object",
                        {
                          "hostPath": [
                            "object",
                            {
                              "path": "string",
                              "type": "string"
                            }
                          ],
                          "pvc": [
                            "object",
                            {
                              "source": [
                                "object",
                                {
                                  "claimName": "string",
                                  "readOnly": "bool"
                                }
                              ],
                              "spec": [
                                "object",
                                {
                                  "accessModes": [
                                    "list",
                                    "string"
                                  ],
                                  "dataSource": [
                                    "object",
                                    {
                                      "apiGroup": "string",
                                      "kind": "string",
                                      "name": "string"
                                    }
                                  ],
                                  "resources": [
                                    "object",
                                    {
                                      "limits": [
                                        "map",
                                        "string"
                                      ],
                                      "requests": [
                                        "map",
                                        "string"
                                      ]
                                    }
                                  ],
                                  "selector": [
                                    "object",
                                    {
                                      "matchExpressions": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "key": "string",
                                            "operator": "string",
                                            "values": [
                                              "list",
                                              "string"
                                            ]
                                          }
                                        ]
                                      ],
                                      "matchLabels": [
                                        "map",
                                        "string"
                                      ]
                                    }
                                  ],
                                  "storageClassName": "string",
                                  "volumeMode": "string",
                                  "volumeName": "string"
                                }
                              ]
                            }
                          ],
                          "supportsAutoResize": "bool"
                        }
                      ],
                      "grpcPort": "number",
                      "httpPort": "number",
                      "image": [
                        "object",
                        {
                          "name": "string",
                          "pullPolicy": "string",
                          "pullSecret": "string"
                        }
                      ],
                      "ingress": [
                        "object",
                        {
                          "sql": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "host": "string",
                              "ingressClassName": "string",
                              "tls": [
                                "list",
                                [
                                  "object",
                                  {
                                    "hosts": [
                                      "list",
                                      "string"
                                    ],
                                    "secretName": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "ui": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "host": "string",
                              "ingressClassName": "string",
                              "tls": [
                                "list",
                                [
                                  "object",
                                  {
                                    "hosts": [
                                      "list",
                                      "string"
                                    ],
                                    "secretName": "string"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      "logConfigMap": "string",
                      "maxSQLMemory": "string",
                      "maxUnavailable": "number",
                      "minAvailable": "number",
                      "nodeSelector": [
                        "map",
                        "string"
                      ],
                      "nodeTLSSecret": "string",
                      "nodes": "number",
                      "podEnvVariables": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "value": "string",
                            "valueFrom": [
                              "object",
                              {
                                "configMapKeyRef": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ],
                                "fieldRef": [
                                  "object",
                                  {
                                    "apiVersion": "string",
                                    "fieldPath": "string"
                                  }
                                ],
                                "resourceFieldRef": [
                                  "object",
                                  {
                                    "containerName": "string",
                                    "divisor": "string",
                                    "resource": "string"
                                  }
                                ],
                                "secretKeyRef": [
                                  "object",
                                  {
                                    "key": "string",
                                    "name": "string",
                                    "optional": "bool"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      ],
                      "resources": [
                        "object",
                        {
                          "limits": [
                            "map",
                            "string"
                          ],
                          "requests": [
                            "map",
                            "string"
                          ]
                        }
                      ],
                      "sqlPort": "number",
                      "tlsEnabled": "bool",
                      "tolerations": [
                        "list",
                        [
                          "object",
                          {
                            "effect": "string",
                            "key": "string",
                            "operator": "string",
                            "tolerationSeconds": "number",
                            "value": "string"
                          }
                        ]
                      ],
                      "topologySpreadConstraints": [
                        "list",
                        [
                          "object",
                          {
                            "labelSelector": [
                              "object",
                              {
                                "matchExpressions": [
                                  "list",
                                  [
                                    "object",
                                    {
                                      "key": "string",
                                      "operator": "string",
                                      "values": [
                                        "list",
                                        "string"
                                      ]
                                    }
                                  ]
                                ],
                                "matchLabels": [
                                  "map",
                                  "string"
                                ]
                              }
                            ],
                            "maxSkew": "number",
                            "topologyKey": "string",
                            "whenUnsatisfiable": "string"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "helm_release.crdb_operator",
            "helm_release.nginx_ingress",
            "kubernetes_namespace.ingress-nginx-namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "ingress-nginx-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ingress-nginx",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "ingress-nginx",
                "resource_version": "893",
                "uid": "241c0d6c-cfbf-4a89-9509-5bb5a20ff3a0"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "message-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/message-service-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "message-service",
                  "group": "message-system"
                },
                "name": "message-service-service",
                "namespace": "default",
                "resource_version": "519",
                "uid": "c6a10f13-9b40-46a8-a96e-b617ebf6b5db"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.97.185.48",
                "cluster_ips": [
                  "10.97.185.48"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "websocket",
                    "node_port": 30877,
                    "port": 4000,
                    "protocol": "TCP",
                    "target_port": "4000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "message-service-pod"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "LoadBalancer"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "localhost",
                        "ip": ""
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "socket-service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "default/socket-service-service",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app": "socket-service",
                  "group": "message-system"
                },
                "name": "socket-service-service",
                "namespace": "default",
                "resource_version": "512",
                "uid": "45286bb0-0e5b-4bdf-bd77-afe598864856"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.99.206.39",
                "cluster_ips": [
                  "10.99.206.39"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "websocket",
                    "node_port": 0,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "socket-service-pod"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
